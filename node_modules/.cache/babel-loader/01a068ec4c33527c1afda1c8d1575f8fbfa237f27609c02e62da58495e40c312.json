{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Link, redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Signupk from \"../images/signup.png\";\nimport logo from \"../images/dark-logo.png\";\nexport default function Login() {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  function handleSubmit(event) {\n    event.preventDefault();\n    const form = event.target;\n    const formData = new FormData(form);\n    axios.post(\"https://stekpayout.onrender.com/auth/singhtek-user/login\", formData, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  const handleLogin = async () => {\n    try {\n      // Make an API call to verify the login credentials\n      const response = await fetch(\"https://stekpayout.onrender.com/auth/singhtek-user/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: \"your_username\",\n          password: \"your_password\"\n        })\n      });\n      if (response.ok) {\n        setLoggedIn(true);\n      } else {\n        // Handle login error, show error message, etc.\n        console.log(\"Login failed\");\n      }\n    } catch (error) {\n      // Handle network error, API failure, etc.\n      console.log(\"An error occurred:\", error);\n    }\n  };\n  if (loggedIn === true) {\n    ///this\n    // this not working\n    return redirect(\"/Admin\");\n  }\n}\n_s(Login, \"rumETxDPcQWJcg8a6Y55ZSVDz7g=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","redirect","axios","Signupk","logo","Login","_s","loggedIn","setLoggedIn","handleSubmit","event","preventDefault","form","target","formData","FormData","post","headers","then","res","console","log","catch","err","handleLogin","response","fetch","method","body","JSON","stringify","username","password","ok","error","_c","$RefreshReg$"],"sources":["/Users/chandangaur/development/Git_Deepak/deepakfrontend/src/Component/Login.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { Link, redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Signupk from \"../images/signup.png\";\nimport logo from \"../images/dark-logo.png\";\n\nexport default function Login() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  function handleSubmit(event) {\n    event.preventDefault();\n    const form = event.target;\n    const formData = new FormData(form);\n    axios\n      .post(\n        \"https://stekpayout.onrender.com/auth/singhtek-user/login\",\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  const handleLogin = async () => {\n    try {\n      // Make an API call to verify the login credentials\n      const response = await fetch(\n        \"https://stekpayout.onrender.com/auth/singhtek-user/login\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            username: \"your_username\",\n            password: \"your_password\",\n          }),\n        }\n      );\n\n      if (response.ok) {\n        setLoggedIn(true);\n      } else {\n        // Handle login error, show error message, etc.\n        console.log(\"Login failed\");\n      }\n    } catch (error) {\n      // Handle network error, API failure, etc.\n      console.log(\"An error occurred:\", error);\n    }\n  };\n\n  if (loggedIn === true) {\n    ///this\n    // this not working\n    return redirect(\"/Admin\");\n  }\n}\n\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,IAAI,MAAM,yBAAyB;AAE1C,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC/C,SAASU,YAAYA,CAACC,KAAK,EAAE;IAC3BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,IAAI,GAAGF,KAAK,CAACG,MAAM;IACzB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAACH,IAAI,CAAC;IACnCV,KAAK,CACFc,IAAI,CACH,0DAA0D,EAC1DF,QAAQ,EACR;MACEG,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CACF,CAAC,CACAC,IAAI,CAAEC,GAAG,IAAK;MACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAK;MACdH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;IAClB,CAAC,CAAC;EACN;EAEA,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,0DAA0D,EAC1D;QACEC,MAAM,EAAE,MAAM;QACdV,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDW,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,QAAQ,EAAE,eAAe;UACzBC,QAAQ,EAAE;QACZ,CAAC;MACH,CACF,CAAC;MAED,IAAIP,QAAQ,CAACQ,EAAE,EAAE;QACfzB,WAAW,CAAC,IAAI,CAAC;MACnB,CAAC,MAAM;QACL;QACAY,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC7B;IACF,CAAC,CAAC,OAAOa,KAAK,EAAE;MACd;MACAd,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEa,KAAK,CAAC;IAC1C;EACF,CAAC;EAED,IAAI3B,QAAQ,KAAK,IAAI,EAAE;IACrB;IACA;IACA,OAAON,QAAQ,CAAC,QAAQ,CAAC;EAC3B;AACF;AAACK,EAAA,CA1DuBD,KAAK;AAAA8B,EAAA,GAAL9B,KAAK;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}